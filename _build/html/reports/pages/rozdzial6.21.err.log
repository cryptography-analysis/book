Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from Encode import Encode
from Decode import Decode

enc = Encode()
dec = Decode()

choice = ""
originalMsg = ""
firstCipher = ""
cipherKey = ""
cipher = ""
finalCipher = ""
decodedMsg = ""

while choice != "4":
    print("\nWybierz jedna z opcji: ")
    print("1. Podaj wiadomosc do zakodowania ")
    print("2. Podaj klucz do ostatecznego zaszyfrowania wiadomosci ")
    print("3. Podaj zaszyforwana wiadomosc do zdeszyfrowania ")
    print("4. Wyjscie ")
    
    choice = input("Wyb√≥r: ")
    
    if (choice == "1"):
        #while not 0 < len(originalMsg) <= 80:
        #    originalMsg = input("Wpisz wiadomosc do zakodowania ")
        msg_file_name = input("\nPodaj ≈õcie≈ºkƒô do pliku z wiadomo≈õciƒÖ do zakodowania: ")
        # otwarcie do odczytu pliku z tekstem do zaszyfrowania 
        msg_file = open(msg_file_name,"r")
        # originMsg - wiadomosc z pliku do zaszyfrowania 
        originalMsg = msg_file.read()
        #print("\nzawarto≈õƒá pliku:\n",originalMsg)
        # firstCipher - tekst po pierszej czesci
        firstCipher = enc.genCipher(originalMsg)
        #print("\nPierwszy szyfrogram: " + firstCipher)
        
    elif (choice == "2"):
        print("\nD≈Çugo≈õƒá pierwszego szyfrogramu:", len(enc.getFirstCipher()))
        while len(cipherKey) == 0 or len(enc.getFirstCipher()) % len(cipherKey) != 0:
            cipherKey = input("\nPodaj klucz transpozycji (Dzielnik d≈Çugo≈õci pierwszego szyfrogramu): ")
        # cipher - ostateczny zaszyfrowany tekst
        cipher = enc.genKey(cipherKey)
        ciph_file = open("szyfrogram.txt", "w")
        ciph_file.write(cipher)
        ciph_file.close()
        #print("\nOstateczny szyfrogram: " + cipher)
        print("\nSzyfrogram zapisany zosta≈Ç w pliku szyfrogram.txt")

    elif (choice == "3"):
        # finalCipher - zaszyfrowany tekst to zdeszyforwania
        to_dec_file_name = input("\nPodaj ≈õcie≈ºkƒô do pliku z szyfrogramem: ")
        to_dec_file = open(to_dec_file_name,"r") 
        finalCipher = to_dec_file.read()
        # decodeMsg - zdeszyfrowany tekst
        decodedMsg = dec.decrypt(enc.getGrid(), enc.getKey(), finalCipher)
        #print("\nWiadomosc jawna: " + decodedMsg)
        dec_file = open("zdekodowany.txt", "w")
        dec_file.write(decodedMsg)
        dec_file.close()
        print("\nWiadomo≈õƒá jawna zosta≈Ça zapisana w pliku zdekodowany.txt")
            
    elif (choice == "4"):
        quit()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mEncode[39;00m [38;5;28;01mimport[39;00m Encode
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mDecode[39;00m [38;5;28;01mimport[39;00m Decode
[1;32m      4[0m enc [38;5;241m=[39m Encode()

[0;31mModuleNotFoundError[0m: No module named 'Encode'
ModuleNotFoundError: No module named 'Encode'

