Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def tL(text):
    i = 0
    for x in text:
        i=i+1
    return i

keyLength = 7
text = """theclassicaltranspositionciphertransposestext"""
textLength = tL(text)
fullRows = floor(textLength/keyLength)
longCols = textLength % keyLength
key = []
randKey = 0
print("Tekst:\n",text)
key = [3, 2, 7, 6, 4, 5, 1]
textMatrixCols = []
for i in range(keyLength):
    textMatrixCols.append("")
    for j in range(fullRows+1):
        if i+keyLength*j < tL(text):
            textMatrixCols[i] += text[i+j*keyLength]
        else:
            textMatrixCols[i] += " "
#print(textMatrixCols)
cTMatrixCols = []
cT = ""
for i in range(keyLength):
    cTMatrixCols.append("")
for i in range(keyLength):
    cTMatrixCols[key[i]-1] = textMatrixCols[i]
#print(cTMatrixCols)
for i in range(keyLength):
    for j in range(fullRows+1):
        if cTMatrixCols[i][j] != " ":
            cT+=cTMatrixCols[i][j];
print("\n---\nZaszyfrowany:\n", cT)
testMatrix = []
testKey = [3, 2, 7, 6, 4, 5, 1]
pT = ""
for i in range(keyLength):
    testMatrix.append("")
for i in range(keyLength):
    testMatrix[i] = cTMatrixCols[testKey[i]-1]
#print(testMatrix)
for j in range(fullRows+1):
    for i in range(keyLength):
        if testMatrix[i][j] != " ":
            pT+=testMatrix[i][j];
print("\n---\nOdszyfrowany:\n",pT)
if text == pT:
    print("\nDziaÅ‚a")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[1], line 10[0m
[1;32m      8[0m text [38;5;241m=[39m [38;5;124m"""[39m[38;5;124mtheclassicaltranspositionciphertransposestext[39m[38;5;124m"""[39m
[1;32m      9[0m textLength [38;5;241m=[39m tL(text)
[0;32m---> 10[0m fullRows [38;5;241m=[39m [43mfloor[49m(textLength[38;5;241m/[39mkeyLength)
[1;32m     11[0m longCols [38;5;241m=[39m textLength [38;5;241m%[39m keyLength
[1;32m     12[0m key [38;5;241m=[39m []

[0;31mNameError[0m: name 'floor' is not defined
NameError: name 'floor' is not defined

